"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.Quiz=class{constructor(e=[]){this.questions=[],this.questionsShadow=[],this.answers=[],this.questionIndex=0,this.maxScore=10,this.questions=e,this.questionsShadow=[...e],this.questionIndex=0}getCurrenQuestionShadow(){throw new Error("Method not implemented.")}resetQuestionIndex(){this.questionIndex=0}setQuestionIndex(e){e<=0&&(e=0),e>=this.questions.length&&(e=this.questions.length),this.questionIndex=e}getCurrentQuestion(){return this.questions[this.questionIndex]}getCurrentQuestionShadow(){return this.questionsShadow[this.questionIndex]}prevQuestion(){this.questionIndex=this.questionIndex<=0?0:this.questionIndex-=1}nextQuestion(){this.questionIndex=this.questionIndex>=this.questions.length-1?this.questions.length-1:this.questionIndex+=1}setMaxScore(e){this.maxScore=e}getCurrentReply(){return this.questionsShadow[this.questionIndex].reply}setReply(e,t){const s=this.findQuestionIndex(e);s&&(this.questionsShadow[s].reply=t)}setCurrentReply(e){this.questionsShadow[this.questionIndex].reply=e}setMaxTime(e){throw new Error("Method not implemented.")}maxTimeReached(e){throw new Error("Method not implemented.")}startTimeCount(){throw new Error("Method not implemented.")}clearString(e){return e.trim().toLowerCase()}clearStringArray(e){return e.map((e=>this.clearString(e)))}correctNumericAnswer(e,t,s){const r=Number(e),n=Number(t),i=Number(s);if(!i)return r===n;const o=Math.abs(i);return n>=r*(1-o)&&n<=r*(1+o)}correctNumbericAnswersArray(e,t,s){return e.map(((e,r)=>this.correctNumericAnswer(e,t[r],s)))}correctStringAnswer(e,t){if("string"==typeof e&&"string"==typeof t){return this.clearString(e)===this.clearString(t)}return!1}correctStringAnswerArray(e,t){return e.map(((e,s)=>this.correctStringAnswer(e,t[s])))}isCorrectNumeric(e,t,s){return"number"==typeof e&&"number"==typeof t?this.correctNumericAnswer(e,t,s):"object"==typeof e&&"object"==typeof t&&this.correctNumbericAnswersArray(e,t,s)}isCorrectString(e,t){return"string"==typeof e&&"string"==typeof t?this.correctStringAnswer(e,t):"object"==typeof e&&"object"==typeof t&&this.correctStringAnswerArray(e,t)}isCorrect(e,t){if(!t.reply)return!1;const{answer:s,error:r}=e,{reply:n}=t;return"number"===e.type?this.isCorrectNumeric(s,n,r):"string"===e.type&&this.isCorrectString(s,n)}getUniformScore(){return this.maxScore/this.questions.length}qualifyQuestion(e){let t=0,s=this.getUniformScore();const r=this.questions[e],n=this.questionsShadow[e],i=r.score||s,o=this.isCorrect(r,n);if("boolean"==typeof o&&o&&(t+=i),"object"==typeof o){const e=i/o.length;o.map((s=>{s&&(t+=e)}))}return t}qualify(){let e=0;return this.questions.map(((t,s)=>{e+=this.qualifyQuestion(s)})),e}findQuestionIndex(e){return this.questions.findIndex((t=>t.question===e.question))}setQuestions(e){this.questions=e,this.questionsShadow=[...e]}removeQuestion(e){const t=this.findQuestionIndex(e);"number"==typeof t&&(this.questions.splice(t,1),this.questionsShadow.splice(t,1))}appendQuestion(e){var t,s;null===(t=this.questions)||void 0===t||t.push(e),null===(s=this.questionsShadow)||void 0===s||s.push(e)}static parseTemplate(e,t){const s=Object.keys(t),r=Object.values(t);try{return new Function(...s,"return `"+e+"`;")(...r)}catch(e){return void console.error(e)}}get length(){return this.questions.length}get index(){return this.questionIndex}};
//# sourceMappingURL=quizzify.min.js.map
