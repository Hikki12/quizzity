!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).quizzify={})}(this,(function(e){"use strict";e.Quiz=class{constructor(e=[]){this.questions=[],this.questionsCopy=[],this.answers=[],this.questionIndex=0,this.maxScore=10,this.questions=e,this.questionsCopy=[...e],this.questionIndex=0}resetQuestionIndex(){this.questionIndex=0}setQuestionIndex(e){e<=0&&(e=0),e>=this.questions.length&&(e=this.questions.length),this.questionIndex=e}getCurrentQuestion(){return this.questions[this.questionIndex]}prevQuestion(){this.questionIndex=this.questionIndex<=0?0:this.questionIndex-=1}nextQuestion(){this.questionIndex=this.questionIndex>=this.questions.length-1?this.questions.length-1:this.questionIndex+=1}setMaxScore(e){this.maxScore=e}setAnswer(e,t){const s=this.findQuestionIndex(e);s&&(this.questionsCopy[s].replied=t)}setCurrentAnswer(e){this.questionsCopy[this.questionIndex].replied=e}setMaxTime(e){throw new Error("Method not implemented.")}maxTimeReached(e){throw new Error("Method not implemented.")}startTimeCount(){throw new Error("Method not implemented.")}isCorrect(e,t){return!1}qualify(){let e=0,t=this.maxScore/this.questions.length;return this.questions.map(((s,n)=>{const i=s.answer,o=this.questionsCopy[n].replied,u=s.score;this.isCorrect(i,o)&&(e+=u||t)})),e}findQuestionIndex(e){return this.questions.findIndex((t=>t.question===e.question))}setQuestions(e){this.questions=e,this.questionsCopy=[...e]}removeQuestion(e){const t=this.findQuestionIndex(e);"number"==typeof t&&this.questions.splice(t,1)}appendQuestion(e){var t;null===(t=this.questions)||void 0===t||t.push(e)}static parseTemplate(e,t){const s=Object.keys(t),n=Object.values(t);try{return new Function(...s,"return `"+e+"`;")(...n)}catch(e){return void console.error(e)}}get length(){return this.questions.length}get index(){return this.questionIndex}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=quizzify.umd.js.map
